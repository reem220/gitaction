trigger:
- main

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  imageName: nodeapp

stages:
- stage: AppBuild
  displayName: "Build, Test, and Package App"
  jobs:
  - job: BuildAndTest
    pool:
      name: agents
    steps:


    - script: |
        npm ci
      displayName: "Install dependencies"

    - script: |
        npm pack
        mv *.tgz app.tgz
      displayName: "Package Node.js app"

    

- stage: DockerBuild
  displayName: "Build Docker Image"
  dependsOn: AppBuild
  jobs:
  - job: DockerImage
    pool:
      name: agents
    steps:
    - download: current
      artifact: app-package
      displayName: "Download app artifact"

    - task: Docker@2
      displayName: "Build Docker Image"
      inputs:
        command: build
        repository: $(imageName)
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        buildContext: '$(Pipeline.Workspace)/app-package'
        tags: |
          $(tag)
- stage: Deploy
  displayName: "Run Container on VM"
  dependsOn: DockerBuild
  jobs:
  - job: RunContainer
    pool:
      name: agents    # same VM where agent is installed
    steps:
    - script: |
        echo "Stopping old container if running..."
        docker rm -f nodeapp || true

        echo "Starting new container..."
        docker run -d -p 80:3000 --name nodeapp $(imageName):$(tag)
      displayName: "Deploy container on same VM"
   
    
